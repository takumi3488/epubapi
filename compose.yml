services:
  server:
    build:
      context: .
      target: server
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/epubapi"
      IMAGES_BUCKET: "images-bucket"
      EPUB_BUCKET: "epub-bucket"
      S3_ENDPOINT: "http://minio:9000"
      ADMIN_ID: "test_admin_id"
      ADMIN_PASSWORD: "test_admin_password"
      JWT_SECRET: "jwt_secret"
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: minio123
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
  
  converter:
    build:
      context: .
      target: converter
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/epubapi"
      S3_ENDPOINT: "http://minio:9000"
      IMAGES_BUCKET: "images-bucket"
      OUT_IMAGES_BUCKET: "out-images-bucket"
      EPUB_BUCKET: "epub-bucket"
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: minio123
    volumes:
      - ./test_assets:/test_assets
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      create_bucket:
        condition: service_completed_successfully

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: epubapi
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  create_bucket:
    image: quay.io/minio/mc:latest
    volumes:
      - ./test_assets/create_bucket.sh:/create_bucket.sh
      - ./test_assets/images:/images
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minio123
      MINIO_ENDPOINT: minio:9000
      IMAGES_BUCKET: images-bucket
      EPUB_BUCKET: epub-bucket
      OUT_IMAGES_BUCKET: out-images-bucket
      ADMIN_ID: admin_id
    entrypoint: sh /create_bucket.sh
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
