services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: epubapi
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  create_bucket:
    image: quay.io/minio/mc:latest
    volumes:
      - ./test_assets/create_bucket.sh:/create_bucket.sh
      - ./test_assets/test.tar.gz:/test.tar.gz
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minio123
      MINIO_ENDPOINT: minio:9000
      IMAGES_BUCKET: images-bucket
      EPUB_BUCKET: epub-bucket
      ADMIN_ID: admin_id
    entrypoint: sh /create_bucket.sh
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
