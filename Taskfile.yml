version: "3"

env:
  DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/epubapi"
  IMAGES_BUCKET: "images-bucket"
  EPUB_BUCKET: "epub-bucket"
  S3_ENDPOINT: "http://localhost:9000"
  PUBLIC_S3_ENDPOINT: "http://localhost:9000"
  ADMIN_ID: "test_admin_id"
  ADMIN_PASSWORD: "test_admin_password"
  JWT_SECRET: "jwt_secret"
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: admin
  AWS_SECRET_ACCESS_KEY: minio123

tasks:
  default:
    cmds:
      - task: all

  serve:
    cmds:
      - task: up
      - task: run

  schema:
    cmds:
      - cargo run --bin gen_schema > openapi.json

  test:
    cmds:
      - cargo test

  rebuild:
    cmds:
      - docker compose down
      - |
        [ -z test_assets/images/test1.tar.gz ] && \
        sh -c "cd test_assets && julia gen_test_data.jl" || true
      - task: up

  up:
    cmds:
      - docker compose up --build -d minio postgres
      - docker compose up --build create_bucket
      - cargo build
      - task: sqlx
      - task: schema

  run:
    cmds:
      - cargo run

  sqlx:
    cmds:
      - cargo sqlx prepare --database-url ${DATABASE_URL}

  check:
    cmds:
      - task: sqlx
      - cargo check
      - task: schema

  all:
    cmds:
      - task: rebuild
      - docker compose run --rm img2epub
      - docker compose run --rm get_metadata
      - task: test
