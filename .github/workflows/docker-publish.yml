name: Docker

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image (server)
        id: build-and-push-server
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}-server
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image (get_metadata)
        id: build-and-push-get_metadata
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.get_metadata
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}-get_metadata
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Build and push Docker image (img2epub)
        id: build-and-push-img2epub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.img2epub
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}-img2epub
          labels: ${{ steps.meta.outputs.labels }}
