name: Docker

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (server)
        id: meta-server
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/epubapi-server

      - name: Build and push Docker image (server)
        id: build-and-push-server
        uses: docker/build-push-action@v5
        with:
          context: .
          target: server
          push: true
          tags: ghcr.io/takumi3488/epubapi-server:${{ github.sha }}
          labels: ${{ steps.meta-server.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract Docker metadata (get_metadata)
        id: meta-get_metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/epubapi-get-metadata)

      - name: Build and push Docker image (get_metadata)
        id: build-and-push-get_metadata
        uses: docker/build-push-action@v5
        with:
          context: .
          target: get_metadata
          push: true
          tags: ghcr.io/takumi3488/epubapi-get-metadata:${{ github.sha }}
          labels: ${{ steps.meta-get_metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Extract Docker metadata (img2epub)
        id: meta-img2epub
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/epubapi-img2epub

      - name: Extract Docker metadata (epub2img)
        id: meta-epub2img
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/epubapi-epub2img

      - name: Build and push Docker image (img2epub)
        id: build-and-push-img2epub
        uses: docker/build-push-action@v5
        with:
          context: .
          target: img2epub
          push: true
          tags: ghcr.io/takumi3488/epubapi-img2epub:${{ github.sha }}
          labels: ${{ steps.meta-img2epub.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
